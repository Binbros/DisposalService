version: "3.7"
services:
  rabbitmq: 
    image: 'rabbitmq:3-management-alpine'
    container_name: rabbitmq
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
      - 15672
   

  redis:
    build:
      context: "./services/redis-image"

  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=strapi 
    # ports: 
    #   - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet

  user:
    build: 
      context: "./services/user"
      target: dev
    environment: 
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/users
      - APP_SECRET=Binbro2020
      - REFRESH_SECRET=Binbro2020Refresh
      - USER_SECRET=BinbroIPAddress
      - EMAIL_TOKEN_SECRET=BinbroEmailer
      - SENDER_EMAIL=ogbonnabasilcea@gmail.com
    volumes: 
      - ./services/user:/user
    ports: 
      - "8000:8000"
  email:
    build: 
      context: "./services/email"
    depends_on:
      - "rabbitmq"
    command: sh -c 'dockerize -wait tcp://rabbitmq:5672 -timeout 300s -wait-retry-interval 30s && node src/subscribeEmails'
    volumes: 
      - ./services/email:/email

      # amqp://localhost  amqp://rabbitmq?connection_attempts=5&retry_delay=5